[tool.poetry]
name = "promptwright"
version = "1.3.1"
description = "LLM based Synthetic Data Generation"
authors = ["Luke Hinds <luke@stacklok.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11"
certifi = "2025.4.26"
charset-normalizer = "3.4.2"
idna = "3.10"
requests = "2.32.3"
tqdm = "4.67.1"
urllib3 = "2.4.0"
huggingface-hub = "0.31.4"
datasets = "3.6.0"
litellm = "1.65.4"
PyYAML = ">=6.0.1"
click = ">=8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
pytest-mock = ">=3.10.0"
requests-mock = ">=1.11.0"
ruff = ">=0.1.0"
black = ">=24.10,<26.0"
bandit = ">=1.7.10"

[tool.poetry.scripts]
promptwright = "promptwright.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::ImportWarning",
    "ignore::pydantic.PydanticDeprecatedSince20",
]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PLC", # pylint
    "PLE", # pylint-errors
    "PLR", # pylint-refactor
    "PLW", # pylint-warnings
    "TRY", # tryceratops
]

ignore = [
    "E501",      # Line too long (handled by formatter)
    "ISC001",    # 
    "B008",      # Do not perform function call in argument defaults
    "C901",      # Function is too complex
    "T201",      # Print found
    "S101",      # Use of assert detected
    "PLR0913",   # Too many arguments to function call
    "PLR0915",   # Too many statements
]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR0915"]
"conftest.py" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["promptwright"]
lines-between-types = 1

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.format]
indent-style = "space"
line-ending = "lf"
skip-magic-trailing-comma = false

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"
